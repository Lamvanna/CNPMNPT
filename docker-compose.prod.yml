version: "3.9"

services:
  # Frontend service (Production)
  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - nafood-network
    restart: always

  # Backend service (Production)
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb+srv://admin:UTEIjifcllB420pH@lamv.tzc1slv.mongodb.net/nafood
      - JWT_SECRET=${JWT_SECRET}
      - PORT=5000
      - CORS_ORIGIN=${CORS_ORIGIN}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    depends_on:
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./logs:/app/logs
    networks:
      - nafood-network
    restart: always
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # MongoDB service - DISABLED (Using MongoDB Atlas)
  # mongo:
  #   image: mongo:7.0
  #   environment:
  #     - MONGO_INITDB_DATABASE=nafood
  #     - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
  #     - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
  #   volumes:
  #     - mongo-data-prod:/data/db
  #     - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
  #     - ./backup:/backup
  #   networks:
  #     - nafood-network
  #   restart: always
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 1G
  #       reservations:
  #         memory: 512M

  # Redis for caching (Production)
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data-prod:/data
    networks:
      - nafood-network
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Backup service - DISABLED (MongoDB Atlas has built-in backup)
  # backup:
  #   image: mongo:7.0
  #   volumes:
  #     - mongo-data-prod:/data/db:ro
  #     - ./backup:/backup
  #   networks:
  #     - nafood-network
  #   environment:
  #     - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
  #     - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
  #   command: |
  #     bash -c "
  #       while true; do
  #         mongodump --host mongo:27017 --username $$MONGO_ROOT_USERNAME --password $$MONGO_ROOT_PASSWORD --authenticationDatabase admin --out /backup/\$$(date +%Y%m%d_%H%M%S)
  #         find /backup -type d -mtime +7 -exec rm -rf {} +
  #         sleep 86400
  #       done
  #     "
  #   restart: always

  # Log aggregator
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.0
    user: root
    volumes:
      - ./logs:/var/log/app:ro
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - nafood-network
    restart: always

volumes:
  # mongo-data-prod:
  #   driver: local
  redis-data-prod:
    driver: local

networks:
  nafood-network:
    driver: bridge
